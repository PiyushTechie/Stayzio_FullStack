<% layout("/layouts/boilerplate") %>
<body class="bg-light">

  <div class="container py-5">
    <div class="card mx-auto shadow-sm" style="max-width: 650px; border-radius: 12px;">
      <div class="card-body">
        <h2 id="h2" class="text-center mb-4">Create Listing</h2>

        <form  id="createForm" method="post" action="/listings" class="needs-validation" novalidate enctype="multipart/form-data">

          <!-- Title -->
          <div class="mb-3">
            <input type="text" name="listing[title]" class="form-control" placeholder="Title" required>
            <div class="valid-feedback">Looks good!</div>
            <div class="invalid-feedback">Please enter a title.</div>
          </div>

          <!-- Description -->
          <div class="mb-3">
            <textarea name="listing[description]" class="form-control" rows="3" placeholder="Description" required></textarea>
            <div class="valid-feedback">Looks good!</div>
            <div class="invalid-feedback">Please provide a description.</div>
          </div>

          <!-- Image Upload -->
          <div class="mb-3">
            <input type="file" name="listing[image]" class="form-control" accept="image/*" required>
            <div class="invalid-feedback">Please upload an image.</div>
          </div>

          <!-- Price -->
          <div class="mb-3">
            <input type="number" id="price" name="listing[price]" class="form-control" placeholder="Price per night" required min="0" step="0.01">
            <div class="valid-feedback">Looks good!</div>
            <div class="invalid-feedback">Please enter a valid price.</div>
          </div>

          <!-- Location -->
          <div class="mb-3">
            <input type="text" name="listing[location]" class="form-control" placeholder="Location" required>
            <div class="valid-feedback">Looks good!</div>
            <div class="invalid-feedback">Please provide a location.</div>
          </div>

          <!-- Country -->
          <div class="mb-3">
            <input type="text" name="listing[country]" class="form-control" placeholder="Country" required>
            <div class="valid-feedback">Looks good!</div>
            <div class="invalid-feedback">Please provide a country.</div>
          </div>

          <!-- Category -->
          <div class="mb-4">
            <label for="category" class="form-label fw-semibold">Category</label>
            <select class="form-select" id="category" name="listing[category]" required>
              <option selected disabled value="">Choose...</option>
              <option value="rooms">Rooms</option>
              <option value="cities">Iconic Cities</option>
              <option value="mountains">Mountains</option>
              <option value="castles">Castles</option>
              <option value="pools">Amazing Pools</option>
              <option value="camping">Camping</option>
              <option value="farms">Farms</option>
              <option value="beach">Beachfront</option>
              <option value="luxury">Luxury</option>
              <option value="cabins">Cabins</option>
              <option value="boats">Boats</option>
            </select>
            <div class="valid-feedback">Category selected!</div>
            <div class="invalid-feedback">Please select a category.</div>
          </div>

          <!-- Submit -->
        <button type="submit" id="createBtn" class="btn-submit w-100">
          <span class="button-text">
            <i class="fas fa-plus-circle"></i>
            Create New Listing
          </span>
          <div class="button-loader"></div>
        </button>  
        </form>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script>
    // Ensure only numbers for price
    document.getElementById("price").addEventListener("input", function(e) {
      this.value = this.value.replace(/[^0-9.]/g, ""); 
    });

    // Bootstrap validation
    (() => {
      'use strict';
      const forms = document.querySelectorAll('.needs-validation');
      Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
            console.log("❌ Form blocked by client-side validation");
          } else {
            console.log("✅ Form is valid, submitting");
          }
          form.classList.add('was-validated');
        }, false);
      });
    })();

    document.querySelectorAll("form").forEach((form) => {
    form.addEventListener("submit", (e) => {
      const btn = form.querySelector(".btn-submit");

      // Prevent loader if form is invalid
      if (!form.checkValidity()) {
        e.preventDefault(); // stop submit
        form.reportValidity(); // show browser validation errors
        return;
      }

      if (btn) {
        btn.classList.add("loading");
        btn.disabled = true;
      }
    });
  });
  </script>

</body>
