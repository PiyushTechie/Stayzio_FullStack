<% layout("/layouts/boilerplate") %>

<body>
  <div class="listings-container">
    <div class="floating-elements"></div>
    
    <div class="container mt-4">
      <div class="listings-header">
        <h1 class="listings-title">
          <i class="fas fa-home me-3" style="color: var(--primary-color);"></i>
          Discover Amazing Stays
        </h1>
        <p class="listings-subtitle">Find your perfect getaway from our curated collection</p>
      </div>

      <div class="category-section">
        <div class="category-scroll-container">
          <div class="scroll-button scroll-button-left" onclick="scrollCategories('left')">
            <i class="fas fa-chevron-left"></i>
          </div>
          <div class="scroll-button scroll-button-right" onclick="scrollCategories('right')">
            <i class="fas fa-chevron-right"></i>
          </div>
          
          <div class="category-container" id="categoryContainer">
            <a href="#" class="category-item active" data-category="all">
              <div class="category-icon"><i class="fas fa-fire"></i></div>
              <div class="category-label">Trending</div>
            </a>
            <a href="#" class="category-item" data-category="rooms">
              <div class="category-icon"><i class="fas fa-bed"></i></div>
              <div class="category-label">Rooms</div>
            </a>
            <a href="#" class="category-item" data-category="cities">
              <div class="category-icon"><i class="fas fa-city"></i></div>
              <div class="category-label">Iconic Cities</div>
            </a>
            <a href="#" class="category-item" data-category="mountains">
              <div class="category-icon"><i class="fas fa-mountain"></i></div>
              <div class="category-label">Mountains</div>
            </a>
            <a href="#" class="category-item" data-category="castles">
              <div class="category-icon"><i class="fas fa-chess-rook"></i></div>
              <div class="category-label">Castles</div>
            </a>
            <a href="#" class="category-item" data-category="pools">
              <div class="category-icon"><i class="fas fa-swimmer"></i></div>
              <div class="category-label">Amazing Pools</div>
            </a>
            <a href="#" class="category-item" data-category="camping">
              <div class="category-icon"><i class="fas fa-campground"></i></div>
              <div class="category-label">Camping</div>
            </a>
            <a href="#" class="category-item" data-category="farms">
              <div class="category-icon"><i class="fas fa-tractor"></i></div>
              <div class="category-label">Farms</div>
            </a>
            <a href="#" class="category-item" data-category="beach">
              <div class="category-icon"><i class="fas fa-umbrella-beach"></i></div>
              <div class="category-label">Beachfront</div>
            </a>
            <a href="#" class="category-item" data-category="luxury">
              <div class="category-icon">
                <i class="fas fa-gem"></i>
              </div>
              <div class="category-label">Luxury</div>
            </a>
            
            <a href="#" class="category-item" data-category="cabins">
              <div class="category-icon">
                <i class="fas fa-home"></i>
              </div>
              <div class="category-label">Cabins</div>
            </a>
            
            <a href="#" class="category-item" data-category="boats">
              <div class="category-icon">
                <i class="fas fa-ship"></i>
              </div>
              <div class="category-label">Boats</div>
            </a>
          </div>
        </div>

        <div class="tax-toggle">
          <div class="form-check-reverse form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
            <label class="form-check-label" for="flexSwitchCheckDefault">Display Total after Taxes</label>
          </div>
        </div>
      </div>

      <div class="listings-grid row row-cols-1 row-cols-lg-4 row-cols-md-3 g-4" id="listingsGrid">
          <% for(let i = 0; i < 8; i++) { %>
          <div class="col">
              <div class="skeleton-card">
                  <div class="skeleton-image shimmer"></div>
                  <div class="skeleton-body">
                      <div class="skeleton-text medium shimmer"></div>
                      <div class="skeleton-text short shimmer"></div>
                  </div>
              </div>
          </div>
          <% } %>
      </div>

    </div>
  </div>

  <script>
  // --- STATE MANAGEMENT ---
  let currentPage = 1;
  let isLoading = false;
  let noMoreListings = false;

  // --- CORE FUNCTIONS ---
  async function fetchListings() {
    if (isLoading || noMoreListings) return;
    isLoading = true;

    const listingsGrid = document.getElementById("listingsGrid");

    // Get search query from URL
    const urlParams = new URLSearchParams(window.location.search);
    const searchQuery = (urlParams.get('q') || '').toLowerCase();

    // If first page, reset grid and scroll state
    if (currentPage === 1) {
      listingsGrid.innerHTML = '';
      noMoreListings = false;
    }

    try {
      // Fetch listings from backend (includes query param)
      urlParams.set("page", currentPage); // ensure page param is included
      const response = await fetch(`/listings/api/listings?${urlParams.toString()}`);
      if (!response.ok) throw new Error('Network response was not ok');

      const newListings = await response.json();

      if (newListings.length > 0) {
        // Append new listings
        newListings.forEach(listing => {
          const listingCard = createListingCard(listing);
          listingsGrid.appendChild(listingCard);
        });

        // Only filter by category, search handled by backend
        const activeCategory = document.querySelector('.category-item.active')?.getAttribute('data-category') || 'all';
        if (activeCategory !== 'all') {
          const listingCards = document.querySelectorAll('.listing-card-wrapper');
          listingCards.forEach(card => {
            const cardCategory = card.getAttribute('data-category');
            card.style.display = (cardCategory === activeCategory) ? '' : 'none';
          });
        }

        currentPage++;
      } else {
        noMoreListings = true;
      }

    } catch (error) {
      console.error("Failed to fetch listings:", error);
      listingsGrid.innerHTML = '<p class="text-center text-danger col-12">Could not load listings. Please try again later.</p>';
    } finally {
      isLoading = false;
      initializeDynamicContent();
    }
  }

  function createListingCard(listing) {
    const col = document.createElement('div');
    col.className = 'col listing-card-wrapper';
    col.setAttribute('data-category', listing.category || 'all');
    col.style.animation = 'fadeIn 0.5s ease-in-out';
    const avgRating = listing.avgRating > 0 ? listing.avgRating : '4.5';

    col.innerHTML = `
      <a href="/listings/${listing._id}" class="listing-link">
        <div class="card listing-card h-100 position-relative">
          <img src="${listing.image.url}" class="card-img-top listing-image" alt="${listing.title} Image" loading="lazy">
          <div class="card-img-overlay image-overlay d-flex align-items-end p-2">
            <h5 class="text-white listing-title-overlay mb-1">
              <i class="fas fa-map-marker-alt me-2" style="font-size: 0.9rem; opacity: 0.8;"></i>
              ${listing.title}
            </h5>
          </div>
          <div class="card-body card-body-enhanced">
            <div class="location-text">
              <i class="fas fa-location-dot location-icon"></i>
              ${listing.location}, ${listing.country}
            </div>
            <p class="card-text description-text">
              <i class="fas fa-quote-left me-2" style="color: var(--primary-color); font-size: 0.8rem; opacity: 0.6;"></i>
              ${listing.description}
            </p>
            <div class="price-rating-container">
              <div class="price-tag" data-price="${listing.price}">
                <i class="fas fa-rupee-sign me-1" style="font-size: 0.9rem;"></i>
                <span class="price-value">${listing.price}</span>/night
                <i class="tax-info">&nbsp; +18% GST</i>
              </div>
              <div class="rating-badge">
                <i class="fa-solid fa-star rating-star"></i>
                ${avgRating}
              </div>
            </div>
          </div>
        </div>
      </a>`;
    return col;
  }

  document.addEventListener("DOMContentLoaded", () => {
    const listingsGrid = document.getElementById("listingsGrid");
    if (listingsGrid) {
      currentPage = 1;
      noMoreListings = false;
      listingsGrid.innerHTML = '';
      fetchListings();
    }

    initializeStaticContent();
    initializeDynamicContent();

    // --- SEARCH FORM HANDLER ---
    const searchForm = document.querySelector('.search-form');
    searchForm.addEventListener('submit', function(e) {
      e.preventDefault();
      const query = this.q.value.trim();
      currentPage = 1;
      noMoreListings = false;
      listingsGrid.innerHTML = '';
      const newUrl = query ? `/listings?q=${encodeURIComponent(query)}` : '/listings';
      history.pushState(null, '', newUrl); // update URL without reload
      fetchListings();
    });
  });

  function initializeStaticContent() {
    const categoryItems = document.querySelectorAll('.category-item');
    categoryItems.forEach(item => {
      item.addEventListener('click', function(e) {
        e.preventDefault();
        categoryItems.forEach(cat => cat.classList.remove('active'));
        this.classList.add('active');
        const selectedCategory = this.getAttribute('data-category');
        const listingCards = document.querySelectorAll('.listing-card-wrapper');
        listingCards.forEach(card => {
          const cardCategory = card.getAttribute('data-category');
          card.style.display = (selectedCategory === 'all' || cardCategory === selectedCategory) ? '' : 'none';
        });
      });
    });

    const style = document.createElement('style');
    style.textContent = `@keyframes fadeIn { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }`;
    document.head.appendChild(style);
  }

  function initializeDynamicContent() {
    const taxSwitch = document.getElementById('flexSwitchCheckDefault');
    const updatePrices = () => {
      document.querySelectorAll(".price-tag").forEach(tag => {
        const basePrice = parseFloat(tag.getAttribute("data-price"));
        const priceValue = tag.querySelector(".price-value");
        const taxInfo = tag.querySelector(".tax-info");
        if (taxSwitch.checked) {
          priceValue.textContent = Math.round(basePrice * 1.18);
          taxInfo.style.display = "none";
        } else {
          priceValue.textContent = basePrice;
          taxInfo.style.display = "inline";
        }
      });
    };
    taxSwitch.onchange = updatePrices;
    updatePrices();
  }

  function scrollCategories(direction) {
    const container = document.getElementById('categoryContainer');
    const scrollAmount = 200;
    if (direction === 'left') container.scrollLeft -= scrollAmount;
    else container.scrollLeft += scrollAmount;
  }

  // Infinite Scroll Listener
  window.addEventListener('scroll', () => {
    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 500) {
      fetchListings();
    }
  });

</script>

</body>
</html>